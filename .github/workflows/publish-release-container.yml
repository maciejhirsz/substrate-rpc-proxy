name: Build and Publish container for new releases

on: [push] # debug
  # release:
  #   types:
  #     - published

jobs:
  build:
    name:                         Build and push image
    runs-on:                      ubuntu-latest
    strategy:
      matrix:
        # tag: ['latest', '${{ github.event.release.tag_name }}']
        tag: ['latest', '${{ GITHUB_REF }}']
    env:
      REGISTRY:                   docker.io/paritytech
      IMAGE_NAME:                 substrate-api-sidecar
      # IMAGE_TAG:                  ${{ matrix.tag }}
      # VERSION:                    ${{ github.event.release.tag_name }}
      VERSION:                    ${{ GITHUB_REF }}

    steps:
    - uses:                       actions/checkout@v2

    - name:                       Build Image tagged ${{ matrix.tag }}
      uses:                       redhat-actions/buildah-build@v1
      with:
        image:                    ${{ env.IMAGE_NAME }}
        tag:                      ${{ matrix.tag }}
        dockerfiles: |
          ./Dockerfile
        build-args: |
          VERSION=${{ env.VERSION }}
          VCS_REF=${{ github.ref }}
          BUILD_DATE=${{ github.event.release.published_at }}

    - name:                       Push image tagged ${{ matrix.tag }} to docker.io
      id:                         push-to-dockerhub
      uses:                       redhat-actions/push-to-registry@v1
      with:
        registry:                 ${{ env.REGISTRY }}
        image:                    ${{ env.IMAGE_NAME }}
        tag:                      ${{ matrix.tag }}
        username:                 ${{ secrets.DOCKERHUB_USERNAME }}
        password:                 ${{ secrets.DOCKERHUB_TOKEN }}

    - name:                       Check the image
      run: |
        echo "New image has been pushed to ${{ steps.push-to-dockerhub.outputs.registry-path }}"